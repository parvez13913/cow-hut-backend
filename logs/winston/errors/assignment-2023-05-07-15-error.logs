{
  stringValue: '"64a5251b5924e"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: '64a5251b5924e',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (C:\level-2\assignment-3\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\level-2\assignment-3\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\level-2\assignment-3\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\level-2\assignment-3\node_modules\mongoose\lib\schematype.js:1204:12)
      at ObjectId.SchemaType.castForQuery (C:\level-2\assignment-3\node_modules\mongoose\lib\schematype.js:1616:15)
      at cast (C:\level-2\assignment-3\node_modules\mongoose\lib\cast.js:356:32)
      at model.Query.Query.cast (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:4874:12)
      at model.Query.Query._castConditions (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:2210:10)
      at model.Query._findOne (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:2497:8)
      at model.Query.exec (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:4404:28),
  valueType: 'string',
  model: Model { Cow },
  level: 'error',
  label: 'cow-Hut',
  timestamp: '2023-07-05T09:43:28.309Z'
}
{
  stringValue: '"64a523875924e92043ba20b588"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: '64a523875924e92043ba20b588',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (C:\level-2\assignment-3\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\level-2\assignment-3\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\level-2\assignment-3\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\level-2\assignment-3\node_modules\mongoose\lib\schematype.js:1204:12)
      at ObjectId.SchemaType.castForQuery (C:\level-2\assignment-3\node_modules\mongoose\lib\schematype.js:1616:15)
      at cast (C:\level-2\assignment-3\node_modules\mongoose\lib\cast.js:356:32)
      at model.Query.Query.cast (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:4874:12)
      at model.Query.Query._castConditions (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:2210:10)
      at model.Query._findOne (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:2497:8)
      at model.Query.exec (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:4404:28),
  valueType: 'string',
  model: Model { Cow },
  level: 'error',
  label: 'cow-Hut',
  timestamp: '2023-07-05T09:44:50.776Z'
}
{
  stringValue: '"ppoo"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: 'ppoo',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (C:\level-2\assignment-3\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (C:\level-2\assignment-3\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (C:\level-2\assignment-3\node_modules\mongoose\lib\schema\objectid.js:246:12)
      at ObjectId.SchemaType.applySetters (C:\level-2\assignment-3\node_modules\mongoose\lib\schematype.js:1204:12)
      at ObjectId.SchemaType.castForQuery (C:\level-2\assignment-3\node_modules\mongoose\lib\schematype.js:1616:15)
      at cast (C:\level-2\assignment-3\node_modules\mongoose\lib\cast.js:356:32)
      at model.Query.Query.cast (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:4874:12)
      at model.Query.Query._castConditions (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:2210:10)
      at model.Query._findOne (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:2497:8)
      at model.Query.exec (C:\level-2\assignment-3\node_modules\mongoose\lib\query.js:4404:28),
  valueType: 'string',
  model: Model { Cow },
  level: 'error',
  label: 'cow-Hut',
  timestamp: '2023-07-05T09:45:32.778Z'
}
{
  path: 'user',
  level: 'error',
  label: 'cow-Hut',
  timestamp: '2023-07-05T09:58:20.978Z'
}
